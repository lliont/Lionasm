// *******************************************
// Galaxians clone - Liontakis Theodoulos 2020
// *******************************************

import net.mikekohn.java_grinder.Lionsys;

public class galaxian
{
	 static String strMsg = "GALAXIAN-ISH";
	 static String sscore = "SCORE: ";
	 static String slives = "SHIPS: ";

static byte[] shipdata =  {
//pos0
(byte)  0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xCC,(byte) 0xCF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
(byte)  0xFF,(byte) 0xFF,(byte) 0xFC,(byte) 0xCC,(byte) 0xCC,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
(byte)  0xFF,(byte) 0xFF,(byte) 0xCC,(byte) 0xCC,(byte) 0xCC,(byte) 0xCF,(byte) 0xFF,(byte) 0xFF,
(byte)  0xFF,(byte) 0xFF,(byte) 0xCC,(byte) 0xCC,(byte) 0xCC,(byte) 0xCF,(byte) 0xFF,(byte) 0xFF,
(byte)  0xFF,(byte) 0xFF,(byte) 0xCF,(byte) 0xFC,(byte) 0xFF,(byte) 0xCF,(byte) 0xFF,(byte) 0xFF,
(byte)  0xFF,(byte) 0x7F,(byte) 0xFF,(byte) 0x3C,(byte) 0x3F,(byte) 0xFF,(byte) 0x7F,(byte) 0xFF,
(byte)  0xF7,(byte) 0x77,(byte) 0xFF,(byte) 0x3C,(byte) 0x3F,(byte) 0xF7,(byte) 0x77,(byte) 0xFF,
(byte)  0xF7,(byte) 0x37,(byte) 0xFF,(byte) 0x3C,(byte) 0x3F,(byte) 0xF7,(byte) 0x37,(byte) 0xFF,
(byte)  0xF7,(byte) 0x37,(byte) 0xF3,(byte) 0x3C,(byte) 0x33,(byte) 0xF7,(byte) 0x37,(byte) 0xFF,
(byte)  0xF7,(byte) 0x37,(byte) 0x33,(byte) 0x3C,(byte) 0x33,(byte) 0x37,(byte) 0x37,(byte) 0xFF,
(byte)  0xF7,(byte) 0x33,(byte) 0x3F,(byte) 0x3C,(byte) 0x3F,(byte) 0x33,(byte) 0x37,(byte) 0xFF,
(byte)  0xF7,(byte) 0x33,(byte) 0xFF,(byte) 0x3C,(byte) 0x3F,(byte) 0xF3,(byte) 0x37,(byte) 0xFF,
(byte)  0xF7,(byte) 0x37,(byte) 0xFF,(byte) 0x3F,(byte) 0x3F,(byte) 0xF7,(byte) 0x37,(byte) 0xFF,
(byte)  0xF7,(byte) 0x37,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xF7,(byte) 0x37,(byte) 0xFF,
(byte)  0xF7,(byte) 0x77,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xF7,(byte) 0x77,(byte) 0xFF,
(byte)  0xFF,(byte) 0x7F,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0x7F,(byte) 0xFF,
//32
(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xCC,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
(byte) 0xFF,(byte) 0xFF,(byte) 0xC6,(byte) 0x66,(byte) 0xCC,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
(byte) 0xFF,(byte) 0xFC,(byte) 0xC6,(byte) 0xC6,(byte) 0x66,(byte) 0x6C,(byte) 0xFF,(byte) 0xFF,
(byte) 0xFF,(byte) 0xF6,(byte) 0x6C,(byte) 0x6C,(byte) 0xC6,(byte) 0xCF,(byte) 0x6F,(byte) 0xFF,
(byte) 0xFF,(byte) 0xFC,(byte) 0x6C,(byte) 0x6C,(byte) 0x6C,(byte) 0x66,(byte) 0xCF,(byte) 0xFF,
(byte) 0xFF,(byte) 0x7C,(byte) 0x66,(byte) 0x6C,(byte) 0xC6,(byte) 0xCC,(byte) 0x66,(byte) 0xFF,
(byte) 0xFF,(byte) 0xC7,(byte) 0xCC,(byte) 0xCB,(byte) 0x6C,(byte) 0x6C,(byte) 0x6C,(byte) 0xFF,
(byte) 0xFC,(byte) 0xC6,(byte) 0x66,(byte) 0xC6,(byte) 0xC6,(byte) 0xC6,(byte) 0xC6,(byte) 0xFF,
(byte) 0xF6,(byte) 0x6C,(byte) 0xB6,(byte) 0xC6,(byte) 0xC6,(byte) 0x6C,(byte) 0x3C,(byte) 0xCF,
(byte) 0xFC,(byte) 0x6C,(byte) 0x6C,(byte) 0x66,(byte) 0xC6,(byte) 0xC6,(byte) 0x67,(byte) 0xFF,
(byte) 0xF7,(byte) 0x6C,(byte) 0x6C,(byte) 0x6F,(byte) 0x66,(byte) 0xC3,(byte) 0x6C,(byte) 0xFF,
(byte) 0xF6,(byte) 0xCC,(byte) 0x66,(byte) 0xFC,(byte) 0x36,(byte) 0xCC,(byte) 0x6C,(byte) 0xFF,
(byte) 0xFC,(byte) 0xC7,(byte) 0xCC,(byte) 0xFC,(byte) 0xF6,(byte) 0xCC,(byte) 0xCC,(byte) 0xFF,
(byte) 0xFC,(byte) 0xC6,(byte) 0xFF,(byte) 0xCF,(byte) 0xFC,(byte) 0xC7,(byte) 0xC7,(byte) 0xFF,
(byte) 0xF7,(byte) 0xCC,(byte) 0xF6,(byte) 0xFF,(byte) 0xFF,(byte) 0xFC,(byte) 0xCC,(byte) 0xFF,
(byte) 0xFF,(byte) 0x7F,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0x7F,(byte) 0xFF,
//;sprite 33
(byte) 0xFF,(byte) 0xFF,(byte) 0xFC,(byte) 0xCC,(byte) 0xCF,(byte) 0xFF,(byte) 0xCF,(byte) 0xFF,
(byte) 0xCF,(byte) 0xCF,(byte) 0xF6,(byte) 0x66,(byte) 0xCF,(byte) 0xFF,(byte) 0xCF,(byte) 0xFF,
(byte) 0xFF,(byte) 0xFC,(byte) 0xCF,(byte) 0xC6,(byte) 0x6F,(byte) 0xCC,(byte) 0xFF,(byte) 0xCF,
(byte) 0xFF,(byte) 0xF6,(byte) 0x6F,(byte) 0xFC,(byte) 0xC6,(byte) 0xCF,(byte) 0xCC,(byte) 0xFF,
(byte) 0xFF,(byte) 0xFC,(byte) 0x6C,(byte) 0x6C,(byte) 0x6F,(byte) 0x66,(byte) 0xCB,(byte) 0xFC,
(byte) 0xFF,(byte) 0xFF,(byte) 0x6E,(byte) 0xEC,(byte) 0xEC,(byte) 0xCE,(byte) 0x66,(byte) 0xCF,
(byte) 0xFF,(byte) 0xC7,(byte) 0xCE,(byte) 0xE9,(byte) 0x6F,(byte) 0x6E,(byte) 0x6C,(byte) 0xFF,
(byte) 0xCF,(byte) 0xF6,(byte) 0x69,(byte) 0x96,(byte) 0xC9,(byte) 0xEF,(byte) 0xFF,(byte) 0xFF,
(byte) 0xF6,(byte) 0x3F,(byte) 0xBF,(byte) 0xB9,(byte) 0x96,(byte) 0x6C,(byte) 0x3C,(byte) 0xCF,
(byte) 0xCC,(byte) 0x6C,(byte) 0x6C,(byte) 0x9E,(byte) 0xC6,(byte) 0xE6,(byte) 0x67,(byte) 0xFF,
(byte) 0xFF,(byte) 0xFF,(byte) 0xFC,(byte) 0x66,(byte) 0x96,(byte) 0xCF,(byte) 0xFF,(byte) 0xFF,
(byte) 0xF6,(byte) 0xFC,(byte) 0x66,(byte) 0xCC,(byte) 0xF6,(byte) 0xC3,(byte) 0x6C,(byte) 0xFF,
(byte) 0xFC,(byte) 0xC7,(byte) 0xCC,(byte) 0x6C,(byte) 0x6F,(byte) 0xCC,(byte) 0xCC,(byte) 0xCF,
(byte) 0xFC,(byte) 0xCF,(byte) 0xFF,(byte) 0xCF,(byte) 0xCC,(byte) 0xF7,(byte) 0xC7,(byte) 0xFF,
(byte) 0xF7,(byte) 0xCC,(byte) 0xFC,(byte) 0xFF,(byte) 0xCF,(byte) 0xFC,(byte) 0xC7,(byte) 0xFC,
(byte) 0xFF,(byte) 0x7F,(byte) 0xFC,(byte) 0xFF,(byte) 0xCF,(byte) 0xFF,(byte) 0x7F,(byte) 0xFC,
//;sprite 34
(byte) 0xFF,(byte) 0xFE,(byte) 0xFC,(byte) 0xFC,(byte) 0xCF,(byte) 0xFF,(byte) 0xCF,(byte) 0xFF,
(byte) 0xCF,(byte) 0xCF,(byte) 0xF6,(byte) 0xFF,(byte) 0xCF,(byte) 0xFE,(byte) 0xCF,(byte) 0xFF,
(byte) 0xFF,(byte) 0xFC,(byte) 0xCF,(byte) 0xCF,(byte) 0xFF,(byte) 0xCC,(byte) 0xFF,(byte) 0xCF,
(byte) 0xCF,(byte) 0xF6,(byte) 0x6F,(byte) 0xFC,(byte) 0xC6,(byte) 0xCF,(byte) 0xCC,(byte) 0xFF,
(byte) 0xFC,(byte) 0xFC,(byte) 0xFC,(byte) 0x6C,(byte) 0x6F,(byte) 0x66,(byte) 0xCB,(byte) 0xFC,
(byte) 0xFF,(byte) 0xEF,(byte) 0x6E,(byte) 0xFC,(byte) 0xFC,(byte) 0xFF,(byte) 0x66,(byte) 0xCF,
(byte) 0xFF,(byte) 0xC7,(byte) 0xCE,(byte) 0xE9,(byte) 0x6F,(byte) 0x6E,(byte) 0x6C,(byte) 0xFE,
(byte) 0xCF,(byte) 0xF6,(byte) 0xFF,(byte) 0x9F,(byte) 0xCF,(byte) 0xFF,(byte) 0xEF,(byte) 0xFF,
(byte) 0xF6,(byte) 0x3F,(byte) 0xFF,(byte) 0xBF,(byte) 0x96,(byte) 0xFC,(byte) 0xEC,(byte) 0xCE,
(byte) 0xCC,(byte) 0x6C,(byte) 0x6C,(byte) 0x9E,(byte) 0xFF,(byte) 0xE6,(byte) 0x67,(byte) 0xFF,
(byte) 0xFF,(byte) 0xFF,(byte) 0xFC,(byte) 0xF6,(byte) 0x96,(byte) 0xCF,(byte) 0xFF,(byte) 0xCF,
(byte) 0xF6,(byte) 0xFC,(byte) 0x66,(byte) 0xCC,(byte) 0xF6,(byte) 0xFF,(byte) 0x6E,(byte) 0xFC,
(byte) 0xFC,(byte) 0xC7,(byte) 0xFC,(byte) 0x6C,(byte) 0x6F,(byte) 0xCC,(byte) 0xCE,(byte) 0xCF,
(byte) 0xEC,(byte) 0xFF,(byte) 0xFF,(byte) 0xCF,(byte) 0xCC,(byte) 0xF7,(byte) 0xF7,(byte) 0xFF,
(byte) 0xFF,(byte) 0xCC,(byte) 0xFC,(byte) 0xFF,(byte) 0xCF,(byte) 0xFC,(byte) 0xFF,(byte) 0xFC,
(byte) 0xFF,(byte) 0x7F,(byte) 0xFF,(byte) 0xFF,(byte) 0xCF,(byte) 0xEF,(byte) 0x7F,(byte) 0xFC
};

static byte[] buldata =  {
//pos0
(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xF6,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xF6,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xF6,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xF6,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xF6,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF
};

static byte[] aexplosion = {
 (byte) 0xFF,(byte) 0xCF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
 (byte) 0xFF,(byte) 0xFC,(byte) 0xFE,(byte) 0xEF,(byte) 0xFF,(byte) 0xFC,(byte) 0xFF,(byte) 0xFF,
 (byte) 0xFF,(byte) 0xFF,(byte) 0xCF,(byte) 0xFE,(byte) 0xFF,(byte) 0xCF,(byte) 0xFF,(byte) 0xFF,
 (byte) 0xFF,(byte) 0xFF,(byte) 0xCF,(byte) 0xFF,(byte) 0xFC,(byte) 0xCF,(byte) 0xFF,(byte) 0xFF,
 (byte) 0xFF,(byte) 0xCE,(byte) 0xFC,(byte) 0xCF,(byte) 0xCE,(byte) 0xFF,(byte) 0xCF,(byte) 0xEF,
 (byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xCF,(byte) 0xCC,(byte) 0xFF,(byte) 0xEF,(byte) 0xFF,
 (byte) 0xFF,(byte) 0xEF,(byte) 0xEC,(byte) 0xCE,(byte) 0xEC,(byte) 0xFF,(byte) 0xCF,(byte) 0xFF,
 (byte) 0xFF,(byte) 0xCC,(byte) 0xCC,(byte) 0x6C,(byte) 0x6E,(byte) 0xCC,(byte) 0xCF,(byte) 0xFF,
 (byte) 0xFF,(byte) 0xFF,(byte) 0xEC,(byte) 0xCC,(byte) 0xCC,(byte) 0xFF,(byte) 0xCF,(byte) 0xFF,
 (byte) 0xFF,(byte) 0xF9,(byte) 0xEE,(byte) 0xCC,(byte) 0xE9,(byte) 0xC9,(byte) 0xFF,(byte) 0xFF,
 (byte) 0xFF,(byte) 0x9C,(byte) 0x9F,(byte) 0xCC,(byte) 0xEF,(byte) 0xEE,(byte) 0x9F,(byte) 0xFF,
 (byte) 0xFF,(byte) 0x99,(byte) 0xFF,(byte) 0xEC,(byte) 0xFF,(byte) 0xCE,(byte) 0x9F,(byte) 0xFF,
 (byte) 0xFF,(byte) 0xCF,(byte) 0xFF,(byte) 0xFF,(byte) 0xCF,(byte) 0xFF,(byte) 0xCF,(byte) 0xFF,
 (byte) 0xFC,(byte) 0xFF,(byte) 0xFF,(byte) 0xEF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFC,(byte) 0xFF,
 (byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
 (byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xCF,(byte) 0xFF,(byte) 0xFF,
//;sprite 25
 (byte) 0xFF,(byte) 0xCF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xCF,(byte) 0xFF,
 (byte) 0xFF,(byte) 0xFC,(byte) 0xCE,(byte) 0xEF,(byte) 0xFF,(byte) 0xFC,(byte) 0xFF,(byte) 0xCF,
 (byte) 0xFE,(byte) 0xFF,(byte) 0xCC,(byte) 0xFE,(byte) 0xFF,(byte) 0xCF,(byte) 0xFF,(byte) 0xFF,
 (byte) 0xCF,(byte) 0xEF,(byte) 0xCF,(byte) 0xCF,(byte) 0xFC,(byte) 0xCF,(byte) 0xFC,(byte) 0xFF,
 (byte) 0xFC,(byte) 0xCE,(byte) 0xFC,(byte) 0xCF,(byte) 0xCE,(byte) 0xFF,(byte) 0xCC,(byte) 0xEF,
 (byte) 0xFC,(byte) 0xFF,(byte) 0xFF,(byte) 0xEF,(byte) 0xEE,(byte) 0xFF,(byte) 0xEF,(byte) 0xFF,
 (byte) 0xFF,(byte) 0xEF,(byte) 0xEE,(byte) 0xEE,(byte) 0xEE,(byte) 0xFF,(byte) 0xCF,(byte) 0xFF,
 (byte) 0xFF,(byte) 0xCC,(byte) 0xCC,(byte) 0xEC,(byte) 0x6E,(byte) 0xCE,(byte) 0xCE,(byte) 0xFF,
 (byte) 0xFF,(byte) 0xFC,(byte) 0xEE,(byte) 0xEE,(byte) 0xCC,(byte) 0xCF,(byte) 0xCF,(byte) 0xFF,
 (byte) 0xFF,(byte) 0xEE,(byte) 0xCE,(byte) 0xCC,(byte) 0xE9,(byte) 0xCC,(byte) 0xFC,(byte) 0xCC,
 (byte) 0xFE,(byte) 0x9E,(byte) 0x9F,(byte) 0xCE,(byte) 0xEF,(byte) 0xEC,(byte) 0x9F,(byte) 0xFF,
 (byte) 0xFF,(byte) 0xC9,(byte) 0xFC,(byte) 0xEC,(byte) 0xFF,(byte) 0xCE,(byte) 0x9C,(byte) 0xCF,
 (byte) 0xFC,(byte) 0xCF,(byte) 0xCF,(byte) 0xFC,(byte) 0xCF,(byte) 0xFE,(byte) 0xCF,(byte) 0xFC,
 (byte) 0xFC,(byte) 0xFF,(byte) 0xFF,(byte) 0xEF,(byte) 0xCF,(byte) 0xFF,(byte) 0xEC,(byte) 0xFF,
 (byte) 0xFC,(byte) 0xFF,(byte) 0xCF,(byte) 0xFF,(byte) 0xFC,(byte) 0xFF,(byte) 0xFF,(byte) 0xCF,
 (byte) 0xCF,(byte) 0xFF,(byte) 0xCF,(byte) 0xFF,(byte) 0xFF,(byte) 0xCF,(byte) 0xFF,(byte) 0xFC,
//;sprite 26,
 (byte) 0xFF,(byte) 0xCF,(byte) 0xEF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xEF,(byte) 0xFF,
 (byte) 0xFF,(byte) 0xEE,(byte) 0xCE,(byte) 0xEF,(byte) 0xFE,(byte) 0xFC,(byte) 0xEE,(byte) 0xFF,
 (byte) 0xFE,(byte) 0xFF,(byte) 0xCC,(byte) 0xFE,(byte) 0xFE,(byte) 0xCF,(byte) 0xEF,(byte) 0xFF,
 (byte) 0xCF,(byte) 0xEF,(byte) 0xCF,(byte) 0xCF,(byte) 0xFC,(byte) 0xCE,(byte) 0xFC,(byte) 0xFF,
 (byte) 0xFC,(byte) 0xCE,(byte) 0xFC,(byte) 0xEF,(byte) 0xCE,(byte) 0xFF,(byte) 0xCC,(byte) 0xEF,
 (byte) 0xFC,(byte) 0xFF,(byte) 0xE4,(byte) 0xEC,(byte) 0x4C,(byte) 0xFE,(byte) 0xEF,(byte) 0xFE,
 (byte) 0xFF,(byte) 0xEC,(byte) 0x49,(byte) 0x99,(byte) 0x99,(byte) 0xEF,(byte) 0xCE,(byte) 0xEF,
 (byte) 0xFF,(byte) 0xCE,(byte) 0x4C,(byte) 0x94,(byte) 0x94,(byte) 0xCE,(byte) 0xEE,(byte) 0xFE,
 (byte) 0xEE,(byte) 0xEC,(byte) 0xE9,(byte) 0x91,(byte) 0x9C,(byte) 0xEE,(byte) 0xCF,(byte) 0xFF,
 (byte) 0xFF,(byte) 0xEE,(byte) 0x4E,(byte) 0x99,(byte) 0xC9,(byte) 0x4C,(byte) 0xFC,(byte) 0xCC,
 (byte) 0xEE,(byte) 0x9E,(byte) 0xE9,(byte) 0xCE,(byte) 0xCF,(byte) 0xEC,(byte) 0x9F,(byte) 0xFF,
 (byte) 0xFF,(byte) 0xC9,(byte) 0xFE,(byte) 0x4C,(byte) 0x44,(byte) 0xCE,(byte) 0x9C,(byte) 0xCF,
 (byte) 0xFC,(byte) 0xCF,(byte) 0xEF,(byte) 0xFE,(byte) 0xEE,(byte) 0xFE,(byte) 0xCF,(byte) 0xFF,
 (byte) 0xFC,(byte) 0xFE,(byte) 0xFE,(byte) 0xEF,(byte) 0xCF,(byte) 0xFF,(byte) 0xEC,(byte) 0xFF,
 (byte) 0xFC,(byte) 0xEF,(byte) 0xCF,(byte) 0xFF,(byte) 0xFC,(byte) 0xEF,(byte) 0xFF,(byte) 0xCF,
 (byte) 0xFF,(byte) 0xFF,(byte) 0xCF,(byte) 0xFE,(byte) 0xFF,(byte) 0xCE,(byte) 0xFF,(byte) 0xFF
};

 static byte[] aliendata =  {
//Angle 0	
 (byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
 (byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
 (byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
 (byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
 (byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0x4F,(byte) 0x4F,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
 (byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0x4F,(byte) 0x4F,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
 (byte) 0xFF,(byte) 0x4F,(byte) 0xF4,(byte) 0x44,(byte) 0x44,(byte) 0xFF,(byte) 0x4F,(byte) 0xFF,
 (byte) 0xFF,(byte) 0x44,(byte) 0x44,(byte) 0x64,(byte) 0x64,(byte) 0x44,(byte) 0x4F,(byte) 0xFF,
 (byte) 0xFF,(byte) 0xFF,(byte) 0xF4,(byte) 0x44,(byte) 0x44,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
 (byte) 0xFF,(byte) 0xF1,(byte) 0x11,(byte) 0x44,(byte) 0x41,(byte) 0x11,(byte) 0xFF,(byte) 0xFF,
 (byte) 0xFF,(byte) 0x11,(byte) 0x1F,(byte) 0x44,(byte) 0x4F,(byte) 0x11,(byte) 0x1F,(byte) 0xFF,
 (byte) 0xFF,(byte) 0x11,(byte) 0xFF,(byte) 0xF4,(byte) 0xFF,(byte) 0xF1,(byte) 0x1F,(byte) 0xFF,
 (byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
 (byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
 (byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
 (byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
// angle 45
 (byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
 (byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
 (byte) 0xFF,(byte) 0xFF,(byte) 0xF4,(byte) 0x4F,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
 (byte) 0xFF,(byte) 0xFF,(byte) 0x44,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
 (byte) 0xFF,(byte) 0xFF,(byte) 0x44,(byte) 0xFF,(byte) 0xF4,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
 (byte) 0xF1,(byte) 0x1F,(byte) 0xF4,(byte) 0x44,(byte) 0x4F,(byte) 0xF4,(byte) 0xFF,(byte) 0xFF,
 (byte) 0xF1,(byte) 0x11,(byte) 0x14,(byte) 0x46,(byte) 0x44,(byte) 0x4F,(byte) 0xFF,(byte) 0xFF,
 (byte) 0xFF,(byte) 0x11,(byte) 0x11,(byte) 0x44,(byte) 0x46,(byte) 0x4F,(byte) 0xFF,(byte) 0xFF,
 (byte) 0xFF,(byte) 0xFF,(byte) 0xF4,(byte) 0x44,(byte) 0x44,(byte) 0x4F,(byte) 0xF4,(byte) 0x4F,
 (byte) 0xFF,(byte) 0xFF,(byte) 0x44,(byte) 0x44,(byte) 0x14,(byte) 0x44,(byte) 0x44,(byte) 0xFF,
 (byte) 0xFF,(byte) 0xFF,(byte) 0x44,(byte) 0x4F,(byte) 0x11,(byte) 0xF4,(byte) 0x4F,(byte) 0xFF,
 (byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0x11,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
 (byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0x11,(byte) 0x1F,(byte) 0xFF,(byte) 0xFF,
 (byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xF1,(byte) 0x1F,(byte) 0xFF,(byte) 0xFF,
 (byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
 (byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
 // angle 90
 (byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
 (byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
 (byte) 0xFF,(byte) 0xFF,(byte) 0xF1,(byte) 0x1F,(byte) 0xF4,(byte) 0x4F,(byte) 0xFF,(byte) 0xFF,
 (byte) 0xFF,(byte) 0xFF,(byte) 0xF1,(byte) 0x11,(byte) 0xF4,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
 (byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0x11,(byte) 0xF4,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
 (byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xF1,(byte) 0x44,(byte) 0x4F,(byte) 0xFF,(byte) 0xFF,
 (byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0x44,(byte) 0x46,(byte) 0x44,(byte) 0x4F,(byte) 0xFF,
 (byte) 0xFF,(byte) 0xFF,(byte) 0xF4,(byte) 0x44,(byte) 0x44,(byte) 0x4F,(byte) 0xFF,(byte) 0xFF,
 (byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0x44,(byte) 0x46,(byte) 0x44,(byte) 0x4F,(byte) 0xFF,
 (byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xF1,(byte) 0x44,(byte) 0x4F,(byte) 0xFF,(byte) 0xFF,
 (byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0x11,(byte) 0xF4,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
 (byte) 0xFF,(byte) 0xFF,(byte) 0xF1,(byte) 0x11,(byte) 0xF4,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
 (byte) 0xFF,(byte) 0xFF,(byte) 0xF1,(byte) 0x1F,(byte) 0xF4,(byte) 0x4F,(byte) 0xFF,(byte) 0xFF,
 (byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
 (byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
 (byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
 // angle 135
  (byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
 (byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
 (byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xF9,(byte) 0x9F,(byte) 0xFF,(byte) 0xFF,
 (byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0x99,(byte) 0x9F,(byte) 0xFF,(byte) 0xFF,
 (byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0x99,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
 (byte) 0xFF,(byte) 0xFF,(byte) 0x44,(byte) 0x4F,(byte) 0x99,(byte) 0xF4,(byte) 0x4F,(byte) 0xFF,
 (byte) 0xFF,(byte) 0xFF,(byte) 0x44,(byte) 0x44,(byte) 0x94,(byte) 0x44,(byte) 0x44,(byte) 0xFF,
 (byte) 0xFF,(byte) 0xFF,(byte) 0xF4,(byte) 0x44,(byte) 0x44,(byte) 0x4F,(byte) 0xF4,(byte) 0x4F,
 (byte) 0xFF,(byte) 0x99,(byte) 0x99,(byte) 0x44,(byte) 0x46,(byte) 0x4F,(byte) 0xFF,(byte) 0xFF,
 (byte) 0xF9,(byte) 0x99,(byte) 0x94,(byte) 0x46,(byte) 0x44,(byte) 0x4F,(byte) 0xFF,(byte) 0xFF,
 (byte) 0xF9,(byte) 0x9F,(byte) 0xF4,(byte) 0x44,(byte) 0x4F,(byte) 0xF4,(byte) 0xFF,(byte) 0xFF,
 (byte) 0xFF,(byte) 0xFF,(byte) 0x44,(byte) 0xFF,(byte) 0xF4,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
 (byte) 0xFF,(byte) 0xFF,(byte) 0x44,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
 (byte) 0xFF,(byte) 0xFF,(byte) 0xF4,(byte) 0x4F,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
 (byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
 (byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
//angle 180
 (byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
 (byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
 (byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
 (byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
 (byte) 0xFF,(byte) 0x99,(byte) 0xFF,(byte) 0xF4,(byte) 0xFF,(byte) 0xF9,(byte) 0x9F,(byte) 0xFF,
 (byte) 0xFF,(byte) 0x99,(byte) 0x9F,(byte) 0x44,(byte) 0x4F,(byte) 0x99,(byte) 0x9F,(byte) 0xFF,
 (byte) 0xFF,(byte) 0xF9,(byte) 0x99,(byte) 0x44,(byte) 0x49,(byte) 0x99,(byte) 0xFF,(byte) 0xFF,
 (byte) 0xFF,(byte) 0xFF,(byte) 0xF4,(byte) 0x44,(byte) 0x44,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
 (byte) 0xFF,(byte) 0x44,(byte) 0x44,(byte) 0x64,(byte) 0x64,(byte) 0x44,(byte) 0x4F,(byte) 0xFF,
 (byte) 0xFF,(byte) 0x4F,(byte) 0xF4,(byte) 0x44,(byte) 0x44,(byte) 0xFF,(byte) 0x4F,(byte) 0xFF,
 (byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0x4F,(byte) 0x4F,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
 (byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0x4F,(byte) 0x4F,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
 (byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
 (byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
 (byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
 (byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
// angle 225
 (byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
 (byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
 (byte) 0xFF,(byte) 0xFF,(byte) 0xF9,(byte) 0x9F,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
 (byte) 0xFF,(byte) 0xFF,(byte) 0xF9,(byte) 0x99,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
 (byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0x99,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
 (byte) 0xFF,(byte) 0xF4,(byte) 0x4F,(byte) 0x99,(byte) 0xF4,(byte) 0x44,(byte) 0xFF,(byte) 0xFF,
 (byte) 0xFF,(byte) 0x44,(byte) 0x44,(byte) 0x49,(byte) 0x44,(byte) 0x44,(byte) 0xFF,(byte) 0xFF,
 (byte) 0xF4,(byte) 0x4F,(byte) 0xF4,(byte) 0x44,(byte) 0x44,(byte) 0x4F,(byte) 0xFF,(byte) 0xFF,
 (byte) 0xFF,(byte) 0xFF,(byte) 0xF4,(byte) 0x64,(byte) 0x44,(byte) 0x99,(byte) 0x99,(byte) 0xFF,
 (byte) 0xFF,(byte) 0xFF,(byte) 0xF4,(byte) 0x44,(byte) 0x64,(byte) 0x49,(byte) 0x99,(byte) 0x9F,
 (byte) 0xFF,(byte) 0xFF,(byte) 0x4F,(byte) 0xF4,(byte) 0x44,(byte) 0x4F,(byte) 0xF9,(byte) 0x9F,
 (byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0x4F,(byte) 0xFF,(byte) 0x44,(byte) 0xFF,(byte) 0xFF,
 (byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0x44,(byte) 0xFF,(byte) 0xFF,
 (byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xF4,(byte) 0x4F,(byte) 0xFF,(byte) 0xFF,
 (byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
 (byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
// angle 270
 (byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
 (byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
 (byte) 0xFF,(byte) 0xFF,(byte) 0xF4,(byte) 0x4F,(byte) 0xF9,(byte) 0x9F,(byte) 0xFF,(byte) 0xFF,
 (byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0x4F,(byte) 0x99,(byte) 0x9F,(byte) 0xFF,(byte) 0xFF,
 (byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0x4F,(byte) 0x99,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
 (byte) 0xFF,(byte) 0xFF,(byte) 0xF4,(byte) 0x44,(byte) 0x9F,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
 (byte) 0xFF,(byte) 0xF4,(byte) 0x44,(byte) 0x64,(byte) 0x44,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
 (byte) 0xFF,(byte) 0xFF,(byte) 0xF4,(byte) 0x44,(byte) 0x44,(byte) 0x4F,(byte) 0xFF,(byte) 0xFF,
 (byte) 0xFF,(byte) 0xF4,(byte) 0x44,(byte) 0x64,(byte) 0x44,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
 (byte) 0xFF,(byte) 0xFF,(byte) 0xF4,(byte) 0x44,(byte) 0x9F,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
 (byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0x4F,(byte) 0x99,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
 (byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0x4F,(byte) 0x99,(byte) 0x9F,(byte) 0xFF,(byte) 0xFF,
 (byte) 0xFF,(byte) 0xFF,(byte) 0xF4,(byte) 0x4F,(byte) 0xF9,(byte) 0x9F,(byte) 0xFF,(byte) 0xFF,
 (byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
 (byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
 (byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
// angle 315
 (byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
 (byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
 (byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xF4,(byte) 0x4F,(byte) 0xFF,(byte) 0xFF,
 (byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0x44,(byte) 0xFF,(byte) 0xFF,
 (byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0x4F,(byte) 0xFF,(byte) 0x44,(byte) 0xFF,(byte) 0xFF,
 (byte) 0xFF,(byte) 0xFF,(byte) 0x4F,(byte) 0xF4,(byte) 0x44,(byte) 0x4F,(byte) 0xF9,(byte) 0x9F,
 (byte) 0xFF,(byte) 0xFF,(byte) 0xF4,(byte) 0x44,(byte) 0x64,(byte) 0x49,(byte) 0x99,(byte) 0x9F,
 (byte) 0xFF,(byte) 0xFF,(byte) 0xF4,(byte) 0x64,(byte) 0x44,(byte) 0x99,(byte) 0x99,(byte) 0xFF,
 (byte) 0xF4,(byte) 0x4F,(byte) 0xF4,(byte) 0x44,(byte) 0x44,(byte) 0x4F,(byte) 0xFF,(byte) 0xFF,
 (byte) 0xFF,(byte) 0x44,(byte) 0x44,(byte) 0x49,(byte) 0x44,(byte) 0x44,(byte) 0xFF,(byte) 0xFF,
 (byte) 0xFF,(byte) 0xF4,(byte) 0x4F,(byte) 0x99,(byte) 0xF4,(byte) 0x44,(byte) 0xFF,(byte) 0xFF,
 (byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0x99,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
 (byte) 0xFF,(byte) 0xFF,(byte) 0xF9,(byte) 0x99,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
 (byte) 0xFF,(byte) 0xFF,(byte) 0xF9,(byte) 0x9F,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
 (byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
 (byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
 
// pos 0 2
 (byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
 (byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
 (byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
 (byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0x4F,(byte) 0x4F,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
 (byte) 0xFF,(byte) 0x4F,(byte) 0xFF,(byte) 0x4F,(byte) 0x4F,(byte) 0xFF,(byte) 0x4F,(byte) 0xFF,
 (byte) 0xFF,(byte) 0x4F,(byte) 0xF4,(byte) 0x44,(byte) 0x44,(byte) 0xFF,(byte) 0x4F,(byte) 0xFF,
 (byte) 0xFF,(byte) 0xF4,(byte) 0x44,(byte) 0x64,(byte) 0x64,(byte) 0x44,(byte) 0xFF,(byte) 0xFF,
 (byte) 0xFF,(byte) 0xFF,(byte) 0xF4,(byte) 0x44,(byte) 0x44,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
 (byte) 0xFF,(byte) 0x11,(byte) 0x14,(byte) 0x44,(byte) 0x44,(byte) 0x11,(byte) 0x1F,(byte) 0xFF,
 (byte) 0xFF,(byte) 0x11,(byte) 0xFF,(byte) 0x44,(byte) 0x4F,(byte) 0xF1,(byte) 0x1F,(byte) 0xFF,
 (byte) 0xFF,(byte) 0x1F,(byte) 0xFF,(byte) 0xF4,(byte) 0xFF,(byte) 0xFF,(byte) 0x1F,(byte) 0xFF,
 (byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
 (byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
 (byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
 (byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
 (byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF
 };
 
 static byte[] queendata =  {
 (byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
 (byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
 (byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFC,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
 (byte) 0xFF,(byte) 0x9F,(byte) 0xFF,(byte) 0xCC,(byte) 0xCF,(byte) 0xFF,(byte) 0x9F,(byte) 0xFF,
 (byte) 0xFF,(byte) 0x9F,(byte) 0xFC,(byte) 0xCC,(byte) 0xCC,(byte) 0xFF,(byte) 0x9F,(byte) 0xFF,
 (byte) 0xFF,(byte) 0x96,(byte) 0xCC,(byte) 0x6C,(byte) 0x6C,(byte) 0xC6,(byte) 0x9F,(byte) 0xFF,
 (byte) 0xFF,(byte) 0x96,(byte) 0x66,(byte) 0x6C,(byte) 0x66,(byte) 0x66,(byte) 0x9F,(byte) 0xFF,
 (byte) 0xFF,(byte) 0xF9,(byte) 0x66,(byte) 0x66,(byte) 0x66,(byte) 0x69,(byte) 0x9F,(byte) 0xFF,
 (byte) 0xFF,(byte) 0xF9,(byte) 0x96,(byte) 0xF6,(byte) 0xF6,(byte) 0x99,(byte) 0xFF,(byte) 0xFF,
 (byte) 0xFF,(byte) 0xFF,(byte) 0x99,(byte) 0xF6,(byte) 0xF9,(byte) 0x9F,(byte) 0xFF,(byte) 0xFF,
 (byte) 0xFF,(byte) 0xFF,(byte) 0xF9,(byte) 0xF6,(byte) 0xF9,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
 (byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xF6,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
 (byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xF6,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
 (byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
 (byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
 (byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
 //pos 45
 (byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
 (byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
 (byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0x99,(byte) 0x99,(byte) 0xFF,(byte) 0xFF,
 (byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0x99,(byte) 0x66,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
 (byte) 0xFF,(byte) 0xFF,(byte) 0xF9,(byte) 0x96,(byte) 0x6C,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
 (byte) 0xFF,(byte) 0xFF,(byte) 0x99,(byte) 0x66,(byte) 0x6C,(byte) 0xCF,(byte) 0xFF,(byte) 0xFF,
 (byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xF6,(byte) 0x66,(byte) 0xCC,(byte) 0xFF,(byte) 0xFF,
 (byte) 0xFF,(byte) 0x66,(byte) 0x66,(byte) 0x66,(byte) 0xCC,(byte) 0xCC,(byte) 0xCF,(byte) 0xFF,
 (byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xF6,(byte) 0x66,(byte) 0xCC,(byte) 0xFF,(byte) 0xFF,
 (byte) 0xFF,(byte) 0xFF,(byte) 0x99,(byte) 0x66,(byte) 0x6C,(byte) 0xCF,(byte) 0xFF,(byte) 0xFF,
 (byte) 0xFF,(byte) 0xFF,(byte) 0xF9,(byte) 0x96,(byte) 0x6C,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
 (byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0x99,(byte) 0x66,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
 (byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xF9,(byte) 0x99,(byte) 0x99,(byte) 0xFF,(byte) 0xFF,
 (byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
 (byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
 (byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
  //pos 90
 (byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
 (byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
 (byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0x99,(byte) 0x99,(byte) 0xFF,(byte) 0xFF,
 (byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0x99,(byte) 0x66,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
 (byte) 0xFF,(byte) 0xFF,(byte) 0xF9,(byte) 0x96,(byte) 0x6C,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
 (byte) 0xFF,(byte) 0xFF,(byte) 0x99,(byte) 0x66,(byte) 0x6C,(byte) 0xCF,(byte) 0xFF,(byte) 0xFF,
 (byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xF6,(byte) 0x66,(byte) 0xCC,(byte) 0xFF,(byte) 0xFF,
 (byte) 0xFF,(byte) 0x66,(byte) 0x66,(byte) 0x66,(byte) 0xCC,(byte) 0xCC,(byte) 0xCF,(byte) 0xFF,
 (byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xF6,(byte) 0x66,(byte) 0xCC,(byte) 0xFF,(byte) 0xFF,
 (byte) 0xFF,(byte) 0xFF,(byte) 0x99,(byte) 0x66,(byte) 0x6C,(byte) 0xCF,(byte) 0xFF,(byte) 0xFF,
 (byte) 0xFF,(byte) 0xFF,(byte) 0xF9,(byte) 0x96,(byte) 0x6C,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
 (byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0x99,(byte) 0x66,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
 (byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xF9,(byte) 0x99,(byte) 0x99,(byte) 0xFF,(byte) 0xFF,
 (byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
 (byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
 (byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
 // 135
 (byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
 (byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
 (byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
 (byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
 (byte) 0xFF,(byte) 0xF6,(byte) 0x6F,(byte) 0xF9,(byte) 0x99,(byte) 0x99,(byte) 0xFF,(byte) 0xFF,
 (byte) 0xFF,(byte) 0xFF,(byte) 0x66,(byte) 0xF9,(byte) 0x66,(byte) 0x69,(byte) 0x9F,(byte) 0xFF,
 (byte) 0xFF,(byte) 0xFF,(byte) 0xF6,(byte) 0x6F,(byte) 0x66,(byte) 0x66,(byte) 0x99,(byte) 0xFF,
 (byte) 0xFF,(byte) 0xFF,(byte) 0x9F,(byte) 0x66,(byte) 0x66,(byte) 0x6C,(byte) 0xF9,(byte) 0x9F,
 (byte) 0xFF,(byte) 0xF9,(byte) 0x96,(byte) 0x6C,(byte) 0xC6,(byte) 0xCC,(byte) 0xFF,(byte) 0x9F,
 (byte) 0xFF,(byte) 0xF9,(byte) 0x96,(byte) 0x66,(byte) 0xCC,(byte) 0xCC,(byte) 0xFF,(byte) 0xFF,
 (byte) 0xFF,(byte) 0xF9,(byte) 0x96,(byte) 0x6C,(byte) 0xCC,(byte) 0xCC,(byte) 0xFF,(byte) 0xFF,
 (byte) 0xFF,(byte) 0xFF,(byte) 0x99,(byte) 0xFC,(byte) 0xCC,(byte) 0xCC,(byte) 0xFF,(byte) 0xFF,
 (byte) 0xFF,(byte) 0xFF,(byte) 0x99,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
 (byte) 0xFF,(byte) 0xFF,(byte) 0xF9,(byte) 0x9F,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
 (byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0x9F,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
 (byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
// 180
 (byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
 (byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
 (byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
 (byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xF6,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
 (byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xF6,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
 (byte) 0xFF,(byte) 0xFF,(byte) 0xF9,(byte) 0xF6,(byte) 0xF9,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
 (byte) 0xFF,(byte) 0xFF,(byte) 0x99,(byte) 0xF6,(byte) 0xF9,(byte) 0x9F,(byte) 0xFF,(byte) 0xFF,
 (byte) 0xFF,(byte) 0xF9,(byte) 0x96,(byte) 0xF6,(byte) 0xF6,(byte) 0x99,(byte) 0xFF,(byte) 0xFF,
 (byte) 0xFF,(byte) 0xF9,(byte) 0x66,(byte) 0x66,(byte) 0x66,(byte) 0x69,(byte) 0x9F,(byte) 0xFF,
 (byte) 0xFF,(byte) 0x96,(byte) 0x66,(byte) 0x6C,(byte) 0x66,(byte) 0x66,(byte) 0x9F,(byte) 0xFF,
 (byte) 0xFF,(byte) 0x96,(byte) 0xCC,(byte) 0x6C,(byte) 0x6C,(byte) 0xC6,(byte) 0x9F,(byte) 0xFF,
 (byte) 0xFF,(byte) 0x9F,(byte) 0xFC,(byte) 0xCC,(byte) 0xCC,(byte) 0xFF,(byte) 0x9F,(byte) 0xFF,
 (byte) 0xFF,(byte) 0x9F,(byte) 0xFF,(byte) 0xCC,(byte) 0xCF,(byte) 0xFF,(byte) 0x9F,(byte) 0xFF,
 (byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFC,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
 (byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
 (byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
// 225
 (byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
 (byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
 (byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
 (byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
 (byte) 0xFF,(byte) 0xFF,(byte) 0x99,(byte) 0x99,(byte) 0x9F,(byte) 0xF6,(byte) 0x6F,(byte) 0xFF,
 (byte) 0xFF,(byte) 0xF9,(byte) 0x96,(byte) 0x66,(byte) 0x9F,(byte) 0x66,(byte) 0xFF,(byte) 0xFF,
 (byte) 0xFF,(byte) 0x99,(byte) 0x66,(byte) 0x66,(byte) 0xF6,(byte) 0x6F,(byte) 0xFF,(byte) 0xFF,
 (byte) 0xF9,(byte) 0x9F,(byte) 0xC6,(byte) 0x66,(byte) 0x66,(byte) 0xF9,(byte) 0xFF,(byte) 0xFF,
 (byte) 0xF9,(byte) 0xFF,(byte) 0xCC,(byte) 0x6C,(byte) 0xC6,(byte) 0x69,(byte) 0x9F,(byte) 0xFF,
 (byte) 0xFF,(byte) 0xFF,(byte) 0xCC,(byte) 0xCC,(byte) 0x66,(byte) 0x69,(byte) 0x9F,(byte) 0xFF,
 (byte) 0xFF,(byte) 0xFF,(byte) 0xCC,(byte) 0xCC,(byte) 0xC6,(byte) 0x69,(byte) 0x9F,(byte) 0xFF,
 (byte) 0xFF,(byte) 0xFF,(byte) 0xCC,(byte) 0xCC,(byte) 0xCF,(byte) 0x99,(byte) 0xFF,(byte) 0xFF,
 (byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0x99,(byte) 0xFF,(byte) 0xFF,
 (byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xF9,(byte) 0x9F,(byte) 0xFF,(byte) 0xFF,
 (byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xF9,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
 (byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
// 270
 (byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
 (byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
 (byte) 0xFF,(byte) 0x99,(byte) 0x99,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
 (byte) 0xFF,(byte) 0xFF,(byte) 0x66,(byte) 0x99,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
 (byte) 0xFF,(byte) 0xFF,(byte) 0xC6,(byte) 0x69,(byte) 0x9F,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
 (byte) 0xFF,(byte) 0xFC,(byte) 0xC6,(byte) 0x66,(byte) 0x99,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
 (byte) 0xFF,(byte) 0xCC,(byte) 0x66,(byte) 0x6F,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
 (byte) 0xFC,(byte) 0xCC,(byte) 0xCC,(byte) 0x66,(byte) 0x66,(byte) 0x66,(byte) 0xFF,(byte) 0xFF,
 (byte) 0xFF,(byte) 0xCC,(byte) 0x66,(byte) 0x6F,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
 (byte) 0xFF,(byte) 0xFC,(byte) 0xC6,(byte) 0x66,(byte) 0x99,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
 (byte) 0xFF,(byte) 0xFF,(byte) 0xC6,(byte) 0x69,(byte) 0x9F,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
 (byte) 0xFF,(byte) 0xFF,(byte) 0x66,(byte) 0x99,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
 (byte) 0xFF,(byte) 0x99,(byte) 0x99,(byte) 0x9F,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
 (byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
 (byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
 (byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
//315
 (byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
 (byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xF9,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
 (byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xF9,(byte) 0x9F,(byte) 0xFF,(byte) 0xFF,
 (byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0x99,(byte) 0xFF,(byte) 0xFF,
 (byte) 0xFF,(byte) 0xFF,(byte) 0xCC,(byte) 0xCC,(byte) 0xCF,(byte) 0x99,(byte) 0xFF,(byte) 0xFF,
 (byte) 0xFF,(byte) 0xFF,(byte) 0xCC,(byte) 0xCC,(byte) 0xC6,(byte) 0x69,(byte) 0x9F,(byte) 0xFF,
 (byte) 0xFF,(byte) 0xFF,(byte) 0xCC,(byte) 0xCC,(byte) 0x66,(byte) 0x69,(byte) 0x9F,(byte) 0xFF,
 (byte) 0xF9,(byte) 0xFF,(byte) 0xCC,(byte) 0x6C,(byte) 0xC6,(byte) 0x69,(byte) 0x9F,(byte) 0xFF,
 (byte) 0xF9,(byte) 0x9F,(byte) 0xC6,(byte) 0x66,(byte) 0x66,(byte) 0xF9,(byte) 0xFF,(byte) 0xFF,
 (byte) 0xFF,(byte) 0x99,(byte) 0x66,(byte) 0x66,(byte) 0xF6,(byte) 0x6F,(byte) 0xFF,(byte) 0xFF,
 (byte) 0xFF,(byte) 0xF9,(byte) 0x96,(byte) 0x66,(byte) 0x9F,(byte) 0x66,(byte) 0xFF,(byte) 0xFF,
 (byte) 0xFF,(byte) 0xFF,(byte) 0x99,(byte) 0x99,(byte) 0x9F,(byte) 0xF6,(byte) 0x6F,(byte) 0xFF,
 (byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
 (byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
 (byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
 (byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF
 };

static int stune[]= { 
0x11, 0x10, 0x0F, 0x0E, 0x0D, 0x0C, 0x0B, 0x0A, 0x09, 0x08, 0x07, 0x41, 0x42, 0x41, 0x42, 0x45,  
0x42, 0x45, 0x47, 0x45, 0x47, 0x6A, 0x60, 0x41, 0x42, 0x41, 0x42, 0x45, 0x42, 0x45, 0x47, 0x45,  
0x47, 0x6A, 0x60, 0x45, 0x23, 0x24, 0x23, 0x24, 0x23, 0x24, 0x23, 0x24, 0x23, 0x24, 0x23, 0x24,  
0x23, 0x24, 0x23, 0x24, 0x02, 0x03, 0x05, 0x06, 0x07, 0x08, 0x09, 0x0A, 0x02, 0x03, 0x05, 0x06,  
0x07, 0x08, 0x09, 0x0A, 0x02, 0x03, 0x05, 0x06, 0x07, 0x08, 0x09, 0x0A, 0x02, 0x03, 0x05, 0x06,  
0x07, 0x08, 0x09, 0x0A
};

static int dbug[]= { 
0x08,0x07,0x06,0x05,0x03,0x02,0x08,0x07,0x06,0x05,0x03,0x02,0x02,0x03,0x05,0x06,0x07,0x08,
0x09,0x0a,0x0b,0x0c,0x0d,0x0e,0x0f,0x10,0x0f,0x0e,0x0d,0x0c,0x0b,0x0c,0x0d
};

static int fdeath[] = {
0x02, 0x17, 0x16, 0x01, 0x16, 0x02, 0x03, 0x05, 0x06, 0x07, 0x18, 0x20, 0x07, 0x06, 0x05, 0x03,
0x02, 0x03, 0x06, 0x07, 0x08, 0x09, 0x0A, 0x19, 0x20, 0x0A, 0x09, 0x08, 0x07, 0x08, 0x0A, 0x0B,
0x0C, 0x0D, 0x0E, 0x1A, 0x20, 0x0E, 0x0D, 0x0C, 0x0B, 0x0A, 0x0B, 0x0D, 0x0E, 0x0F, 0x10, 0x11,
0x1B, 0x3C, 0xE0 };

static int ptable1[]= {
0,351,468,527,556,591,624,703,787,887,940,1055,1177,1256,1398,1575};
static int ptable2[]= {
1775,1895,2110,2330,2542,2796,393,442,745,989,1491,1997,1669,3196,3495,0};

static int arc[] = {
-1,0x00,-1,0x00,-1,0x00,-1,0x01,-1,0x00,-1,0x00,-1,0x01,-1,0x00,
-1,0x01,-1,0x00,0x00,0x01,-1,0x00,-1,0x02,0x00,0x02,-1,0x00,0x00,0x01,
-1,0x01,0x00,0x01,-1,0x01,0x00,0x01,0x00,0x01,-1,0x01,0x00,0x01,0x00,0x01,
0x00,0x02,0x00,0x02,0x00,0x01,0x00,0x01,0x01,0x01,0x00,0x01,0x00,0x01,0x01,0x01,
0x00,0x01,0x01,0x01,0x00,0x01,0x01,0x00,0x00,0x01,0x01,0x01,0x01,0x00,0x00,0x01,
0x01,0x00,0x01,0x01,0x01,0x00,0x01,0x01,0x01,0x00,0x01,0x00,0x01,0x01,0x01,0x00,
0x01,0x00,0x01,0x00,0x01,0x00,0x01
};

 static int RAND=197, score=0, level=0, ships, shipdie=0, hiscore=0;
 static int shipx=120, shipy = 190, bulcnt=0, bulx, buly;
 static int swarmx=62, swarmy=0, swdx=1, swarmdx=0;
 static int olx=60, oly=10;
 static int spx[]=new int[28], spy[]=new int[28] , spdx[]=new int[28], spalive[]=new int[28], spdying[] = new int[28] , swarmed[] = new int[28];
 static int spox[]=new int[28], spoy[]=new int[28] ,spcol[]=new int[28], spframe[]=new int[28], spbullets[]=new int[28], escort[]=new int[28];
 static int spen[] = {1,2,15,16,17,18,19,20,21,22,23,24,25,26,30,31,32,33,34,35,36,37,38,39,40,41,42,43 };
 static int attack_order[] = {14,20,21,27,7,13,15,19,22,26,8,12,16,18,25,9,11,17,24,10,2,6,3,5,4,0,1};
 static int bullets[] = {4,5,6,7,8,9,10,11,12,13,14,27};
 static int bulsx[]=new int[12], bulsy[]=new int[12], bulsen[]=new int[12]; 
 static int aliencnt=0, attackdl1=30, attdl2=50, alienno=0; 
 static int attackno=0;
 static int attackers[] = { 0,0,0,0,0,0,0 };
 static int attacking[]=new int[28]; 
 static int nexta=-1, qa1=0, qa2=0;

	static void set_sprite( int s, int buf, int en, int x, int y)
	{
		int bank=s/15; int ss=s%15;
		Lionsys.out(16384+bank*4096+256*buf+ss*8,x); //Lionsys.outb(16384+bank*4096+1+256*buf+s*8,x%256);
		Lionsys.out(16384+bank*4096+2+256*buf+ss*8,y); //Lionsys.outb(16384+bank*4096+3+256*buf+s*8,y);
		Lionsys.out(16384+bank*4096+6+256*buf+ss*8,en); //Lionsys.outb(16384+bank*4096+7+256*buf+s*8,en);
	}
	
	static void kill_sprite( int s)
	{
		int bank=s/15; int ss=s%15;
		Lionsys.out(16384+bank*4096+6+256+ss*8,0);
		Lionsys.out(16384+bank*4096+6+ss*8,0);
	}
	
	static void set_sprite_data( int s, int buf, byte d[], int frame, int colOR)
	{
		int bank=s/15; int ss=s%15;
		for (int j=0; j<128; j++)  {
				Lionsys.outb(16896+bank*4096+1792*buf+ss*128+j,d[j+frame*128] | (byte) colOR);
		}
	}
	
	static int find_next(int dummy) 
	{
		int f=-1, i=0, b;
		while (i<28 && f==-1) {
			b=attack_order[i];
			if (spalive[b]==1 && spdying[b]==0 && swarmed[b]==1) {
				if (Lionsys.rnd(100)<50) f=b; 
			}
			i++;
		}
		return f;
	}
	
	static int free_bullet(int level)
	{	int f=-1, i=0;
		while (i<12 && f==-1) {
			if (bulsen[i]==0) {
				f=i; bulsen[i]=1; 
			}
			i++;
		}
		return f;
	}
	
	
	static void set_param(int plevel)
	{	int i;
		swarmx=62; swarmy=0; score=0; ships=3; level=0;
		spox[0]=swarmx+36; spoy[0]=2;  // queen 1
		spox[1]=swarmx+72; spoy[1]=2;  // queen 2
		for (i=0;  i<5; i++) {
			spox[2+i]=swarmx+18+i*18; spoy[2+i]=16; spcol[2+i]=0;  spcol[i]=0;
		}
		for (i=0;  i<7; i++) {
			spox[7+i]=swarmx+i*18; spoy[7+i]=30; spcol[7+i]=(byte) 0x11;
			spox[14+i]=swarmx+i*18; spoy[14+i]=44; spcol[14+i]=(byte) 0x99;
			spox[21+i]=swarmx+i*18; spoy[21+i]=58; spcol[21+i]=(byte) 0x99;
		}
	}
	
	static void init( int level)
	{	int i,j;
		for (i=0; i<28; i++)  { 
			spalive[i]=1; spdying[i]=0; swarmed[i]=1; attacking[i]=-1; 
			spx[i]=spox[i]; spy[i]=spoy[i]; spdx[i]=0; spframe[i]=0; escort[i]=-1;
			if (level==0) spbullets[i]=3; else spbullets[i]=4;
		}
		set_sprite_data(0,0,shipdata,0,0);
		set_sprite_data(0,1,shipdata,0,0);
		set_sprite_data(3,0,buldata,0,0);
		set_sprite_data(3,1,buldata,0,0);
		set_sprite_data(1,0,queendata,0,0);
		set_sprite_data(1,1,queendata,0,0);
		set_sprite_data(2,0,queendata,0,0);
		set_sprite_data(2,1,queendata,0,0);
		for (i=0;  i<5; i++) {
			set_sprite_data(15+i,0,aliendata,0,0);
			set_sprite_data(15+i,1,aliendata,8,0);
		}
		for (i=0;  i<7; i++) {
			set_sprite_data(20+i,0,aliendata,0,(byte) 0x11);
			set_sprite_data(20+i,1,aliendata,8,(byte) 0x11);
			set_sprite_data(30+i,0,aliendata,0,(byte) 0x99);
			set_sprite_data(30+i,1,aliendata,8,(byte) 0x99);
			set_sprite_data(37+i,0,aliendata,0,(byte) 0x99);
			set_sprite_data(37+i,1,aliendata,8,(byte) 0x99);
		}
		for (j=0; j<12; j++) {
			set_sprite_data(bullets[j],0,buldata,0,0x11);
			set_sprite_data(bullets[j],1,buldata,0,0x11);
		}
		shipx=130; shipy = 190;  
		swarmx=62; swarmy=0; swarmdx=0;
		if (level==0) for (i=0; i<120; i++) { Lionsys.screen( 0,Lionsys.rnd(14)); Lionsys.plot(29+Lionsys.rnd(240),11+Lionsys.rnd(185),1); }
		attackdl1=35; attdl2=120;
		for (j=0; j<12; j++) bulsen[j]=0;
		Lionsys.screen( 0, 14);
	}

	static void main()
	{
		int buffer0=0, esc=0; score=0; 
		int i,j,s,t,ti,t2,ti2,t3,ti3,t4,ti4,frame1;
		int key=0, asct=0, near=0, turn=0; 
		//Lionsys.out(24,1);
		Lionsys.out(11,1); //Lionsys.out(13,10000); //Lionsys.out(28,180); 
		Lionsys.out(25,60); Lionsys.out(26,70);  Lionsys.out(27,70);
		while ((key!='Q') && (key!='q'))
		{
			Lionsys.out(20,0); // buffer 0
			Lionsys.screen( 0, 14); Lionsys.cls();
			set_param(level); 
			init(level);
			set_sprite(0,0,1,shipx,shipy);
			Lionsys.print_str(0,44,slives); Lionsys.print_num(0,50,ships);
			Lionsys.print_str(2,48,"L:"); Lionsys.print_num(2,50,level+1);
			Lionsys.print_str(0,1,sscore);
			Lionsys.print_num(0,7,score);
			t=Lionsys.timer(); t2=t; t3=t;	t4=t;
			for (i=0; i<28; i++) set_sprite(spen[i],0,spalive[i],spx[i],spy[i]);
			int snd=6; Lionsys.out(27,70);
			while (snd<60) if (Lionsys.isplaying(2)==0 && Lionsys.isplaying(1)==0) {
				Lionsys.sound(1,ptable1[stune[snd] & (byte) 0x0F],2);
				Lionsys.sound(2,ptable2[stune[snd]/16],2);
				snd++;
			}
			Lionsys.out(32,2);
			while ( (key!='q') && (key!='Q') && ships>0) {
				key=Lionsys.inkey(); char k =(char) key;
				if (k=='s' ) { if (shipx<260) shipx+=2; }
				if (k=='a' ) { if (shipx>30) shipx-=2; }
				if (k==' ') {  if (bulcnt==0 && shipdie==0) {bulcnt=92; bulx=shipx; buly=shipy-9; } }
				ti=(Lionsys.timer()-t);  
				if (Lionsys.abs(ti)>8)  //***************1
				{ 
					if ((Lionsys.joy1() & 16) !=0)  { if (shipx<260) shipx+=1; }
					if ((Lionsys.joy1() & 8) !=0) { if (shipx>30) shipx-=1; }
					if ((Lionsys.joy1() & 1) !=0)  if (bulcnt==0 && shipdie==0) { bulcnt=92; bulx=shipx; buly=shipy-9; }
					//if (shipdie==0) 
						set_sprite(0,0,1,shipx,shipy);
					if (bulcnt==0) set_sprite(3,0,1,shipx,shipy-9); 
						else {
						bulcnt-=1; set_sprite(3,0,1,bulx,buly); buly-=2; 
						near=0;
						for (i=0; i<28; i++) {
							if (spalive[i]==1 && spdying[i]==0) {
								int dx=(bulx-spx[i]); int dy=(buly-spy[i]);
								if (((long) dx*dx+ (long) dy*dy)<49L) {
									spdying[i]=4; bulcnt=0; 
									if (i<2) { int val;
										if (swarmed[i]==1) val=150; else 
										{
											if (esc==0)	val=200; else
											{	int e=0;
												for (j=2; j<7; j++) 
													if (escort[j]==i && (spalive[j]==0 || spdying[j]>0) && swarmed[j]==0) {e++; escort[j]=-1;}
												if (e==1) val=300; else if (e==2) val=800; else val=200; 
											}
										}
										score+=val; esc=0;
										Lionsys.screen( 0,12);
										Lionsys.print_num(2,1,val);
										Lionsys.screen( 0,14);
									} else
									if (i<7) { score+=100-swarmed[i]*50;} else
									if (i<14) { score+=80-swarmed[i]*40;} else 
									          { score+=60-swarmed[i]*30;}
									Lionsys.print_num(0,7,score);
								}
								if (((long) dx*dx+ (long) dy*dy)<121L) {near=1;}
							}
						}
					}
					for (j=0; j<12; j++) {
							if (bulsen[j]==1)
							if (Lionsys.abs(bulsx[j]-shipx)<8 && (shipy-bulsy[j])<7) {
								attackdl1=68; attdl2=120; 
								shipdie=16;
								for (i=0; i<12; i++) { bulsen[i]=0; }
							}
						}
					t=Lionsys.timer();
				}
				ti2=(Lionsys.timer()-t2);
				if (Lionsys.abs(ti2)>60)    //***************2
				{ 	aliencnt=0; attackno=0;
					if (shipdie>0) { 
						Lionsys.out(27,200);
						Lionsys.out(31,1);
						Lionsys.sound(0,320+shipdie*2,4);
						//Lionsys.sound(2,50+shipdie*2,4);
						
						set_sprite_data(0,0,shipdata,3-shipdie/8,0);
						set_sprite_data(0,1,shipdata,3-shipdie/8,0);
						set_sprite(0,0,1,shipx,shipy);
						/* Lionsys.sound(0,ptable1[dbug[31-shipdie] & (byte) 0x0F],1);
						Lionsys.sound(1,ptable2[dbug[31-shipdie]/16],1); */
						shipdie--;
						if (shipdie==0) {
							ships--;
							Lionsys.out(31,0);
							Lionsys.print_num(0,50,ships);
							set_sprite_data(0,0,shipdata,0,0);
							attackdl1=60;
						}
					}
					for (i=0; i<28; i++) 
					{	int dx,dy;
						aliencnt+=spalive[i];
						if (attacking[i]!=-1) attackno++;
						if (spdying[i]>0) { 
							set_sprite_data(spen[i],0,aexplosion,2-spdying[i]/2,0);
							set_sprite_data(spen[i],1,aexplosion,2-spdying[i]/2,0);
							spdying[i]--; 
							if (spdying[i]==0) {
								spalive[i]=0;  attacking[i]=-1; } 
								Lionsys.sound(1,2000*spdying[i],5); //if (spdying[i]>0)
							}
						set_sprite(spen[i],0,spalive[i],spx[i],spy[i]);
						
						if (spx[i]<36 && spalive[i]==1 && spdying[i]==0) swdx=1;
						if (spx[i]>234 && spalive[i]==1 && spdying[i]==0) swdx=-1;
						dx=(shipx-spx[i]); dy=(shipy-spy[i]);  //collision
						if ( spalive[i]==1 && attackdl1<30) 
							if (((long) dx*dx+ (long) dy*dy)<197L) {
							attackdl1=68;
							shipdie=31;
							for (j=0; j<12; j++)  bulsen[j]=0; 
							spdying[i]=4;
							}
					}
					for (j=0; j<12; j++) {
						set_sprite(bullets[j],0,bulsen[j],bulsx[j],bulsy[j]);
						bulsy[j]+=7;
						if (bulsy[j]>198) bulsen[j]=0;
					}
					if ( bulcnt==0 || near==0 ) {swarmdx+=swdx; for (i=0; i<28; i++) if (swarmed[i]==1) spx[i]+=swdx; }
					t2=Lionsys.timer();
				}
				ti4=(Lionsys.timer()-t4);
				if (Lionsys.abs(ti4)>24)    //***************4
				{
					int frame=4, dy=0;
					for (i=0; i<28; i++) 
					{   
						if (attacking[i]>-1 && spdying[i]!=1) {
							if (attacking[i]<102) {
									if (escort[i]!=-1) {spdx[i]=spdx[escort[i]]; spy[i]=spy[escort[i]]+18; attacking[i]++; } else {
									int a=attacking[i]; 
									dy=arc[a]; a++;
									if (spx[i]<120) spdx[i]=arc[a]*-3; else spdx[i]=arc[a]*3; 
									a++; attacking[i]=a;
									if (attacking[i]==102) if (shipx-spx[i]<0) spdx[i]=-6; else spdx[i]=6;}
							} else if (spy[i]<160) {
								dy=1;
								if (escort[i]!=-1) spdx[i]=spdx[escort[i]]; else
								if (spy[i]%3==0) {
									if (shipx-spx[i]!=0) if (shipx-spx[i]>0) spdx[i]++; else spdx[i]--;
									if (spdx[i]>8) spdx[i]=8; if (spdx[i]<-8) spdx[i]=-8;
								}
								if (spy[i]>60 && spy[i]%15==10) {
									if (spbullets[i]>0 && attackdl1<30) {
											int fb=free_bullet(level);
										if (fb!=-1) {
											spbullets[i]--;
											bulsx[fb]=spx[i];
											bulsy[fb]=spy[i];
											bulsen[fb]=1;
										}
									}
								}
							} else if (spy[i]<200) {
								dy=2;
								if (escort[i]!=-1) spdx[i]=spdx[escort[i]]; else
								if (spy[i]==160) { spdx[i]+=(shipx-spx[i])/16; 
									if (spdx[i]>8) spdx[i]=8; if (spdx[i]<-8) spdx[i]=-8;
								}
							} else { 
								if (i==0) for (j=2; j<5;j++)  escort[j]=-1;
								if (i==1) for (j=4; j<7;j++)  escort[j]=-1;
								swarmed[i]=1; attacking[i]=-1; spx[i]=spox[i]+swarmdx; escort[i]=-1;
								spy[i]=spoy[i]; spdx[i]=0; dy=0; spbullets[i]=4; if (level==0) spbullets[i]=3; 
							}
							spx[i]+=spdx[i]/3; spy[i]+=dy;
							if (dy<0) { if (spdx[i]>2) frame=1; else if (spdx[i]<-2) frame=7; else frame=0; } else
								if (dy>0) { if (spdx[i]>5) frame=3; else if (spdx[i]<-5) frame=5; else frame=4; } else
									if (spdx[i]>5) frame=2; else if (spdx[i]<-5) frame=6;  
							if (swarmed[i]==1) {frame=0;}
							if (frame!=spframe[i])
							if (i>1) {
								int fr;
								set_sprite_data(spen[i],0,aliendata,frame,spcol[i]);
								if (swarmed[i]==1) fr=8; else fr=frame; 
								set_sprite_data(spen[i],1,aliendata,fr,spcol[i]); 
							} else {
								set_sprite_data(spen[i],0,queendata,frame,spcol[i]);
								set_sprite_data(spen[i],1,queendata,frame,spcol[i]);
							}
							spframe[i]=frame;
						}
					}
					t4=Lionsys.timer();
				}
				ti3=(Lionsys.timer()-t3);  //**************3
				if (Lionsys.abs(ti3)>100)
				{ 
					if (attackdl1>0) attackdl1--;
					if (attackdl1==0 && attackno<5) { 
						if (level==0) attackdl1=10+Lionsys.rnd(20); else attackdl1=8+Lionsys.rnd(15); 
						nexta=find_next(0); 
						if (nexta!=-1) {
							//attackno++;
							swarmed[nexta]=0; attacking[nexta]=0;
						}
					}
					if (attdl2>0) attdl2--;
					if (attdl2==0 && attackno<4) { 
						attdl2=120;  attackdl1=30;
						esc=0; 
						if (swarmed[0]==1 && spalive[0]==1 && spdying[0]==0) {
							swarmed[0]=0; attacking[0]=0; i=2;
							while (i<5 && esc<2) {
								if (swarmed[i]==1 && spalive[i]==1 && spdying[i]==0) { esc++; swarmed[i]=0; escort[i]=0; attacking[i]=0; }
								i++;
							}								
						} else
						if (swarmed[1]==1 && spalive[1]==1 && spdying[1]==0) {
							swarmed[1]=0; attacking[1]=0; i=4;
							while (i<7 && esc<2) {
							if (swarmed[i]==1 && spalive[i]==1 && spdying[i]==0) { esc++; swarmed[i]=0; escort[i]=1; attacking[i]=0;}
								i++;
							}
						}
					}
					if (buffer0==0) buffer0=1; else buffer0=0;	Lionsys.out(20,buffer0*48);
					Lionsys.vscroll(11,184,30,126,-3);
					t3=Lionsys.timer();
					//if (aliencnt!=0) {  Lionsys.sound(1,40+asct,5); asct=(asct+1) % 30;}
					if (bulcnt>0) {  Lionsys.sound(0,500-bulcnt/2,4); //if (Lionsys.isplaying(0)==0) 
								  } else Lionsys.sound(0,0,0);
				}
				if (aliencnt==0) {level++; init(level); Lionsys.print_num(2,50,1+level); }
			}
			key=0;
			Lionsys.print_str(10,18,"*** GAME OVER ***");
			Lionsys.print_str(12,12,"PRESS ENTER TO PLAY AGAIN");
			if (score>hiscore) {
				Lionsys.print_str(16,15,"!!! NEW HIGH SCORE !!!");
				hiscore=score;
			}
			Lionsys.print_str(14,18,"HI SCORE: "); Lionsys.print_num(14,28,hiscore);
			while ((key!='Q') && (key!='q') && (key!=13))
			{
				key=Lionsys.inkey();
			}
		}
		Lionsys.out(11,0); Lionsys.out(32,0);
	}
}

//     if (Lionsys.isplaying(0)==0)
//	  {
//		Lionsys.sound(0,notes[snd],dur[snd]);
//		snd+= 1;
//		if (snd>=28) snd=0;
//	  }
		
		
/* 		

; FLAGSHIP DEATH sound effect.

1EDF:  02 17 16 01 16 02 03 05 06 07 18 20 07 06 05 03  
1EEF:  02 03 06 07 08 09 0A 19 20 0A 09 08 07 08 0A 0B  
1EFF:  0C 0D 0E 1A 20 0E 0D 0C 0B 0A 0B 0D 0E 0F 10 11  
1F0F:  1B 3C E0  */
